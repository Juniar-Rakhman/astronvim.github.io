"use strict";(self.webpackChunkastro_vim=self.webpackChunkastro_vim||[]).push([[397],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=p(t),g=i,d=f["".concat(u,".").concat(g)]||f[g]||s[g]||o;return t?r.createElement(d,a(a({ref:n},c),{},{components:t})):r.createElement(d,a({ref:n},c))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5823:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const o={id:"adding_own_plugins",title:"Adding your own plugins"},a=void 0,l={unversionedId:"Configuration/adding_own_plugins",id:"Configuration/adding_own_plugins",title:"Adding your own plugins",description:"Create your own config file(s)",source:"@site/docs/Configuration/adding_own_plugins.md",sourceDirName:"Configuration",slug:"/Configuration/adding_own_plugins",permalink:"/nightly/Configuration/adding_own_plugins",draft:!1,tags:[],version:"current",frontMatter:{id:"adding_own_plugins",title:"Adding your own plugins"},sidebar:"docs",previous:{title:"Managing User Configuration",permalink:"/nightly/Configuration/manage_user_config"},next:{title:"Basic Configuration",permalink:"/nightly/Configuration/basic_configuration"}},u={},p=[{value:"Create your own config file(s)",id:"create-your-own-config-files",level:2},{value:"To disable an AstroVim package",id:"to-disable-an-astrovim-package",level:2}],c={toc:p};function s(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"create-your-own-config-files"},"Create your own config file(s)"),(0,i.kt)("p",null,"First off, for a comprehensive explanation of how best to manage your local configuration files see: ",(0,i.kt)("a",{parentName:"p",href:"/Configuration/manage_user_config"},"Managing user config")),(0,i.kt)("p",null,"However if you're not familiar with Packer, neovim, lua or Astrovim here is the short version of how to add packages:"),(0,i.kt)("p",null,"Create the file",(0,i.kt)("inlineCode",{parentName:"p"},"~/.config/nvim/lua/user/init.lua")),(0,i.kt)("p",null,"and add the following contents "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'local config = {\n  plugins = {\n    init = {\n      { "tpope/vim-fugitive" },\n      { "tpope/vim-surround" },\n    },\n}\n\nreturn config\n')),(0,i.kt)("p",null,"Then restart vim and type ",(0,i.kt)("inlineCode",{parentName:"p"},"<leader>")," + p (for Packer, you should see it in the menu that appears) then ",(0,i.kt)("inlineCode",{parentName:"p"},"s"),' for "sync".\nThis runs Packer Sync, which is the command that installs and enables (or disables / removes when desired) packages'),(0,i.kt)("h2",{id:"to-disable-an-astrovim-package"},"To disable an AstroVim package"),(0,i.kt)("p",null,"Within your ",(0,i.kt)("inlineCode",{parentName:"p"},"user/init.lua")," file above add to the ",(0,i.kt)("inlineCode",{parentName:"p"},"init")," block like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'local config = {\n  plugins = {\n    init = {\n      ["declancm/cinnamon.nvim"] = { disable = true },\n      { "tpope/vim-fugitive" },\n      { "tpope/vim-surround" },\n    },\n}\n\nreturn config\n')),(0,i.kt)("p",null,"Above we disable the cinnamon plugin by way of example"))}s.isMDXComponent=!0}}]);